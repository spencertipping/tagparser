sdocp('sdoc::js::tagparser.html', 'HTML adapter for the tag parser.\nThis script assumes that the tagparser global is available and adds a .html() method to convert the JSON structure to HTML-like text. Because of various exceptions in the HTML format, the\nemitted code may or may not be useful.\n\ncaterwaul.clone(\'std seq\')(function () {\n  tagparser.html = convert_to_html,\n\n  where*[convert_to_html(s) = as_html(tagparser(s)),\n         \n         escape(s)  = s.replace(/&/g, \'&amp;\').replace(/</g, \'&lt;\').replace(/>/g, \'&gt;\'),\n         as_html(t) = t && t.constructor === String ? escape(t) :\n                      \'text\' in t                   ? escape(t.text) :\n                      \'name\' in t                   ? t.data ? t.metadata ? \'<#{t.name} #{attrs(t.metadata)}>#{as_html(t.data)}</#{t.name}>\' :\n                                                                            \'<#{t.name}>#{as_html(t.data)}</#{t.name}>\' :\n                                                               t.metadata ? \'<#{t.name} #{attrs(t.metadata)}/>\' :\n                                                                            \'<#{t.name}/>\' :\n                      t instanceof Array            ? seq[~t %[_] *+as_html].join(\'\') : \'Unknown form: #{t}\',\n                      \n         attrs(xs)  = seq[~xs *[\'#{_.name}="#{_.data[0]}"\']].join(\' \')]})();');